services:
  # Main Immich Server service configuration
  immich-server:
    container_name: immich-server # Name of the running container
    image: ghcr.io/immich-app/immich-server:v1.133.1 # Image to be used
    #ports: # Mapping ports from the host OS to the container
     # - 2283:2283
    expose:
      - 2283
      - 3003
    volumes: # Mounting directories for persistent data storage
      - immich_upload:/usr/src/app/upload
    environment: # Setting environment variables
      DB_HOSTNAME: immich-postgres
      DB_USERNAME: immich
      DB_PASSWORD: arnppogGlk8G1L
      DB_DATABASE_NAME: immich
      DB_PORT: 5442
      REDIS_HOSTNAME: immich-redis
      IMMICH_MACHINE_LEARNING_URL: http://immich-machine-learning:3003
    depends_on: # Dependencies to ensure the order of service startup
      - redis
      - database
    restart: always # Policy to always restart the container if it stops
    labels:
      - traefik.enable=true
      - traefik.http.routers.immich-http.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.immich-http.entrypoints=web
      - 'traefik.http.routers.immich-https.entrypoints=websecure'    
      - 'traefik.http.routers.immich-https.rule=Host(`${DOMAIN}`)'
      - 'traefik.http.routers.immich-https.tls.certresolver=cloudflare'
      - 'traefik.http.routers.immich-https.tls=true'
    networks:
      - immich-network
      - immich-traefik

  # Configuration for Immich Machine Learning service
  immich-machine-learning:
    container_name: immich-machine-learning # Name of the running container
    image: ghcr.io/immich-app/immich-machine-learning:v1.133.1 # Image to be used
    volumes: # Mounting directories for persistent data storage
      - immich_cache:/cache
    environment: # Setting environment variables
      DB_HOSTNAME: ${DB_HOSTNAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      DB_PORT: ${DB_PORT}
      REDIS_HOSTNAME: ${REDIS_HOSTNAME}
    restart: always # Policy to always restart the container if it stops
    networks:
      - immich-network

  # Configuration for Redis service
  redis:
    container_name: immich-redis # Name of the running container
    image: redis:6.2-alpine@sha256:70a7a5b641117670beae0d80658430853896b5ef269ccf00d1827427e3263fa3 # Image to be used
    restart: always # Policy to always restart the container if it stops
    networks:
      - immich-network

  # Configuration for Database service
  database:
    container_name: immich-postgres # Name of the running container
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0 # Image to be used
    environment: # Setting environment variables
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_DATA: /var/lib/postgresql/data
      PGPORT: ${PGPORT}
    volumes: # Mounting directories for persistent data storage
      - immich_postgres:/var/lib/postgresql/data
    restart: always # Policy to always restart the container if it stops
    networks:
      - immich-network

# Network definitions
networks:
  immich-traefik:
    driver: bridge
    name: immich-traefik
  # Define the network
  immich-network:
    # Use the bridge driver
    driver: bridge


# Define named volumes for data persistence.
volumes:
  # Define a named volume for Immich data.
  immich_cache:
    # Use the local storage driver.
    driver: local
  immich_upload:
    # Use the local storage driver.
    driver: local
  immich_postgres:
    # Use the local storage driver.
    driver: local