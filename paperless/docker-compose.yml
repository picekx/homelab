version: "3.4"
networks:
  paperless:
    driver: bridge
    name: paperless
  paperless-traefik:
    driver: bridge
    name: paperless-traefik
services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - paperless


  db:
    image: docker.io/library/postgres:15
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - "8010:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - /home/piotr/paperless/export:/usr/src/paperless/export
      - /home/piotr/paperless/consume:/usr/src/paperless/consume
    networks:
      - paperless
      - paperless-traefik
    environment:
      PAPERLESS_REDIS: ${PAPERLESS_REDIS}
      PAPERLESS_DBHOST: ${PAPERLESS_DBHOST}
      PAPERLESS_DBPASS: ${PAPERLESS_DBPASS}
      USERMAP_UID: ${USERMAP_UID}
      USERMAP_GID: ${USERMAP_GID}
      PAPERLESS_URL: ${PAPERLESS_URL}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      TZ: ${TZ}
    labels:
      - traefik.enable=true
      - traefik.http.routers.docs-http.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.docs-http.entrypoints=web
      - 'traefik.http.routers.docs-https.entrypoints=websecure'    
      - 'traefik.http.routers.docs-https.rule=Host(`${DOMAIN}`)'
      - 'traefik.http.routers.docs-https.tls.certresolver=cloudflare'
      - 'traefik.http.routers.docs-https.tls=true'
      - 'traefik.docker.network=paperless-traefik'


volumes:
  data:
  media:
  pgdata:
  redisdata: